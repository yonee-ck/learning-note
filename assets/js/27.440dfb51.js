(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{210:function(t,a,s){"use strict";s.r(a);var n=s(0),r=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"exception-handling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exception-handling","aria-hidden":"true"}},[t._v("#")]),t._v(" Exception Handling")]),t._v(" "),s("h3",{attrs:{id:"예외처리-프로그램-실행-중-문제가-발생했을-경우-대처할-수-있도록-처리하는-것"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#예외처리-프로그램-실행-중-문제가-발생했을-경우-대처할-수-있도록-처리하는-것","aria-hidden":"true"}},[t._v("#")]),t._v(" 예외처리: 프로그램 실행 중 문제가 발생했을 경우 대처할 수 있도록 처리하는 것")]),t._v(" "),s("h3",{attrs:{id:"throw"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#throw","aria-hidden":"true"}},[t._v("#")]),t._v(" throw")]),t._v(" "),s("p",[t._v("강제로 예외를 발생시키는 경우 throw 키워드를 사용한다.\n사용자 정의 예외를 던질 수 있다.\n현재 함수의 실행이 중지되고 throw 이후의 명령문은 실행되지 않는다.\n컨트롤은 콜 스택의 첫 번째 catch(예외 처리기) 블록으로 전달되며,\n호출자 함수 사이에 catch 블록이 없으면 해당 함수를 호출했던 블록으로 그 예외가 전파되어 올라간다.\n(호출 스택(call stack)을 따라서 예외가 전파되어 올라감)\n콜 스택을 따라 올라가도 예외 처리기가 없다면 이 예외는 에러로 취급")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" active "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" el\n    active "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" active\n")])])]),s("h3",{attrs:{id:"try-catch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#try-catch","aria-hidden":"true"}},[t._v("#")]),t._v(" try...catch")]),t._v(" "),s("p",[t._v("실행할 코드블럭을 표시하고 예외(exception)가 발생(throw)할 경우의 응답을 지정한다.\ntry 절에 코드를 작성. try 절에서 예외가 발생할 경우 catch 절이 호출.\n맨 마지막 finally 절은 앞의 try 절의 결과와 관계 없이 항상 실행이 보장된다.\n(break, return 문 등으로 인해 try 블록에서 제어가 빠져 나와도 finally 절은 실행. 무조건 try 절 실행 후 바로)")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// A or B가 숫자가 아닌 경우 에러 발생!")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** try 절에서 예외가 발생한 경우에만 실행\n     * 지역 변수 e를 사용하여 Error 객체나 try 절에서 전달 받은 값을 참조할 수 있다.\n     */")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'연산 에러 발생 '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'연산을 종료합니다.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])},[],!1,null,null,null);a.default=r.exports}}]);