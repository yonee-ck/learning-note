(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{215:function(t,e,r){"use strict";r.r(e);var i=r(0),n=Object(i.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"git-ignore"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-ignore","aria-hidden":"true"}},[t._v("#")]),t._v(" Git ignore")]),t._v(" "),r("h3",{attrs:{id:"ignore"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ignore","aria-hidden":"true"}},[t._v("#")]),t._v(" ignore")]),t._v(" "),r("p",[t._v("깃에서 특정 파일 혹은 디렉토리를 관리 대상에서 제외할 때 사용하는 파일\n해당 파일 안에 기입된 내용들은 모두 깃에서 관리하지 않겠다는 의미\nex) 자동으로 생성되는 로그파일, 프로젝트 설정 파일 등을 관리 대상에서 제외한다.")]),t._v(" "),r("ul",[r("li",[t._v("디렉토리 최상단에 위치 (.gitignore)")]),t._v(" "),r("li",[t._v("ex) .idea, *.xml 의 형식으로 파일 내에 기재한다.")])]),t._v(" "),r("p",[t._v("+) 만일 .gitignore에서 선언된 파일들이 제외되지 않는다면 캐시를 날리고 .gitignore를 다시 생성 후 push 한다.\n캐시 삭제 명령어: git rm -r --cached")])])},[],!1,null,null,null);e.default=n.exports}}]);